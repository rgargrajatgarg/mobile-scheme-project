{"version":3,"sources":["logo.svg","Components/Header.js","shared/file_types.js","Components/NewSchemeForm.js","Components/Loading.js","Components/ViewScheme.js","Components/UpdateScheme.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","Container","className","Brand","href","alt","src","width","height","Button","onClick","e","preventDefault","window","location","size","SheetJSFT","map","x","join","RenderPriceCondition","Form","Group","controlId","Label","Row","Col","md","xs","Control","as","name","value","type","placeholder","RenderModelCondition","RenderCondition","props","condType","NewSchemeForm","fileHeaderOptions","useState","setCondType","file","setFile","schemeImage","setSchemeImage","fileHeader","setFileHeader","date","model","price","userHeader","setUserHeader","excelJSON","setExcelJSON","modelShow","setModelShow","userHeaderSubmit","setUserHeaderSubmit","history","useHistory","event","a","imgData","FormData","append","axios","post","console","log","alert","message","priceOperator","condValue","target","schemeName","start_date","startDate","end_date","endDate","condition_type","price_condition","operator","data_header","excel_data","creditValue","creditType","excel_file","fileName","push","useEffect","head","onSubmit","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","XLSX","read","bookVBA","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","Object","keys","readAsArrayBuffer","accept","onChange","files","label","required","Text","step","Modal","show","Title","Body","curr_state","dateCol","priceCol","modelCol","Footer","Loading","style","display","justifyContent","alignItems","color","datePretty","date1","Intl","DateTimeFormat","year","month","day","format","Date","parse","ViewScheme","schemeDetails","schemeData","updateSchemeData","loading","setLoading","deleteLoading","setDeleteLoading","deleteshow","setDeleteShow","DeleteToast","class","Toast","onClose","delay","autohide","get","then","dataFromAPI","results","id","delete","filter","item","_id","fetchSchemeData","scheme","parseInt","creditNote","lastThree","toString","substring","length","otherNumbers","editLink","res","replace","Card","schemeDoc","document","getElementById","schemeMore","getElementsByClassName","schemeViewDown","schemeViewUp","toggleView","confirm","deleteScheme","defaultValue","condition","UpdateScheme","match","params","setScheme","Condition","setCondition","schemeGetCall","put","split","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1182c71f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {Navbar,Container,Button} from 'react-bootstrap';\r\nimport {MdAddCircle} from 'react-icons/md';\r\nfunction Header(){\r\n    return(\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n    <Container className=\"wrapper\">\r\n      <Navbar.Brand href=\"/\">\r\n        <img\r\n          alt=\"\"\r\n          src=\"/logo.png\"\r\n          width=\"30\"\r\n          height=\"30\"\r\n          className=\"d-inline-block align-top logo\"\r\n        />{' '}\r\n      Prosper\r\n      </Navbar.Brand>\r\n      <div className=\"new-scheme-wrapper\">\r\n                        <Button  onClick={(e) => {e.preventDefault();window.location.href='/newscheme';}} className=\"new-scheme-button\"><MdAddCircle size={40} /></Button>\r\n        </div>\r\n    </Container>\r\n  </Navbar>\r\n    )\r\n}\r\nexport default Header;","export const SheetJSFT = [\r\n\t\"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"\r\n].map(function(x) { return \".\" + x; }).join(\",\");","import {Form,Button,Row,Col,Modal} from 'react-bootstrap';\r\nimport {useState,useEffect} from 'react';\r\nimport { model } from '../shared/model_data';\r\nimport { SheetJSFT } from '../shared/file_types';\r\nimport { make_cols } from './MakeColumns';\r\nimport axios from \"axios\";\r\nimport XLSX from 'xlsx';\r\nimport {useHistory} from \"react-router-dom\";\r\n// var Multiselect = require('react-bootstrap-multiselect');\r\n\r\n\r\nfunction RenderPriceCondition(){\r\n    return (\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicOperator\">\r\n            <Form.Label>Select the Condition</Form.Label>\r\n            <Row>\r\n                <Col md={2} xs={4}>\r\n                    <Form.Control\r\n                    as=\"select\" name=\"priceOperator\">\r\n                    <option value=\">=\">{\">=\"}</option>\r\n                    <option value=\"=\">=</option>\r\n                    <option value=\"<=\">{\"<=\"}</option>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Control type=\"number\" name=\"condValue\" placeholder=\"Enter Condition Value\" />\r\n                </Col>\r\n            </Row>  \r\n        </Form.Group>\r\n    )\r\n}\r\nfunction RenderModelCondition(){\r\n   \r\n    //mobile model condition allow\r\n    return(\r\n        <div></div>\r\n    )\r\n}\r\nfunction RenderCondition(props){\r\n    if(props.condType===\"No\"){\r\n        return (<div></div>)\r\n    }\r\n    else if(props.condType===\"Price_Condition\"){\r\n        return <RenderPriceCondition />\r\n    }\r\n    else if(props.condType===\"Model_Condition\"){\r\n        return <RenderModelCondition />\r\n    }\r\n    else {return(<div></div>);}\r\n}\r\nfunction NewSchemeForm(){\r\n    \r\n    const [condType,setCondType] = useState();\r\n    const [file,setFile] = useState();\r\n    const [schemeImage,setSchemeImage] = useState();\r\n    const [fileHeader,setFileHeader] = useState();\r\n    const [userHeader,setUserHeader] = useState({\r\n        date: '',\r\n        model: '',\r\n        price: ''\r\n    });\r\n    const [excelJSON,setExcelJSON] = useState();\r\n    const [modelShow,setModelShow] = useState();\r\n    const [userHeaderSubmit,setUserHeaderSubmit] = useState();\r\n    const history = useHistory();\r\n    var fileHeaderOptions;\r\n    useEffect(() => {\r\n        setCondType(\"No\");\r\n        setFileHeader(null);\r\n        setModelShow(false);\r\n      }, []);\r\n    if(fileHeader) fileHeaderOptions = fileHeader.map((head)=>{return (<option key = {head} value={head}>{head}</option>)});\r\n\r\n    function   handleActivationFileChange(e) {\r\n        const files = e.target.files;\r\n        if (files && files[0]) {\r\n            console.log(files[0]);\r\n            setFile(files[0]);\r\n        }\r\n    };\r\n    function   handleActivationUpload(e) {\r\n        e.preventDefault();\r\n        /* Boilerplate to set up FileReader */\r\n        const reader = new FileReader();\r\n        const rABS = !!reader.readAsBinaryString;\r\n        // console.log(file);\r\n        try{\r\n            reader.onload = (e) => {\r\n            /* Parse data */\r\n            const bstr = e.target.result;\r\n            const wb = XLSX.read(bstr, {\r\n                type: rABS ? 'binary' : 'array',\r\n                bookVBA: true,\r\n            });\r\n            /* Get first worksheet */\r\n            const wsname = wb.SheetNames[0];\r\n            const ws = wb.Sheets[wsname];\r\n            /* Convert array of arrays */\r\n            const data = XLSX.utils.sheet_to_json(ws);\r\n            /* Update state */\r\n            //   console.log(JSON.stringify(data, null, 2));\r\n            // const dataJSON = JSON.stringify(data, null, 2);\r\n            setExcelJSON(data);\r\n            setFileHeader(Object.keys(data[0]));\r\n            setModelShow(true);\r\n            //   this.setState({ data: data, cols: make_cols(ws['!ref']) }, () => {\r\n                \r\n            //   });\r\n            };\r\n            if (rABS) {\r\n            console.log('rABS');\r\n            reader.readAsBinaryString(file);\r\n            } else {\r\n            reader.readAsArrayBuffer(file);\r\n            }\r\n        }\r\n        catch{\r\n            alert(\"Please select Valid file\");\r\n        }\r\n      }\r\n    function handleUserHeaderSubmit(e){\r\n        e.preventDefault();\r\n        const curr_state = {\r\n            date: e.target.dateCol.value,\r\n            price: e.target.priceCol.value,\r\n            model: e.target.modelCol.value,\r\n        }\r\n        setUserHeader(curr_state);\r\n        setUserHeaderSubmit(true);\r\n        setModelShow(false);\r\n        return(<div></div>);\r\n    }\r\n    function handleImageFileChange(e){\r\n        const files = e.target.files;\r\n        if (files && files[0]) {\r\n            console.log(files[0]);\r\n            setSchemeImage(files[0]);\r\n        }\r\n         \r\n    }\r\n    async function handleAddScheme(event) {\r\n\r\n        const imgData = new FormData();\r\n        imgData.append('file', schemeImage);\r\n        try{\r\n            axios.post('/upload/', imgData);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            alert(e.message);\r\n        }\r\n\r\n\r\n        var priceOperator;\r\n        var condValue; \r\n        event.preventDefault();\r\n        if(condType === \"No\"){\r\n            priceOperator = null;\r\n            condValue = null\r\n        }\r\n        else if(condType === \"Price_Condition\"){\r\n            priceOperator = event.target.priceOperator.value;\r\n            condValue = event.target.condValue.value\r\n        }\r\n        if(userHeaderSubmit){\r\n            try{\r\n                \r\n            const createTask = await axios.post(`/scheme/`, {\r\n                    name: event.target.schemeName.value,\r\n                    start_date: event.target.startDate.value,\r\n                    end_date: event.target.endDate.value,\r\n                    condition_type: event.target.condType.value,\r\n                    price_condition: {\r\n                        operator: priceOperator,\r\n                        price : condValue\r\n                    },\r\n                    data_header:{\r\n                        date: userHeader.date,\r\n                        price: userHeader.price,\r\n                        model: userHeader.model\r\n                    },\r\n                    excel_data:excelJSON,\r\n                    creditValue:{\r\n                        creditType: event.target.creditType.value,\r\n                        creditValue: event.target.creditValue.value\r\n                    },\r\n                    excel_file:{\r\n                        name:file.name,\r\n                        size:file.size\r\n                    },\r\n                    fileName:file\r\n            });\r\n            alert('Scheme ' + event.target.schemeName.value + ' added succesfully');\r\n            history.push(\"/\");\r\n            }\r\n            catch(e){\r\n            console.log(e);\r\n            alert(e.message);\r\n            }\r\n        }\r\n        else{\r\n            alert(\"Please upload the Activation Sheet & select the correct columns\");\r\n        }\r\n       //  alert(\"States added successfully\");\r\n       //  fetchStateData();\r\n   }\r\n    return(\r\n    <div className = \"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4 offset-md-4\">\r\n\r\n            {/* <h3>Now Understanding Credit Note is Easier, Just upload your activation sheet and scheme Details, credit Note (CN) will be calculated for you in less than a minute</h3> */}\r\n\r\n\r\n            <p>Please select the Activation file first, then add the scheme details below</p>\r\n            <Form onSubmit = {handleActivationUpload}> \r\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                    <Form.Label>Upload Activation Sheet</Form.Label>\r\n                    <Form.Control type=\"file\" accept={SheetJSFT} onChange={handleActivationFileChange}/>\r\n                    <Button variant=\"primary\" type=\"submit\">Upload</Button>\r\n            </Form.Group>\r\n            </Form>\r\n        <Form onSubmit={handleAddScheme}>\r\n            <Form.Group controlId=\"formFile\" className=\"mb-3\" >\r\n                    <Form.Label>Upload Scheme Image (Optional)</Form.Label>\r\n                    <Form.Control type=\"file\" name=\"file\" onChange={handleImageFileChange}/>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                <Form.Label controlId=\"floatingInputGrid\" label=\"Email address\">\r\n                <Form.Control required type=\"name\" name=\"schemeName\" placeholder=\"Enter Scheme Name\" />\r\n                </Form.Label>\r\n                <Form.Text className=\"text-muted\">\r\n                Create a new name for scheme to help you track later on\r\n                </Form.Text>\r\n\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"start_date\">\r\n                <Form.Label>Start Date</Form.Label>\r\n                <Form.Control required type=\"date\" name=\"startDate\" placeholder=\"Scheme Start Date\" />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"end_date\">\r\n                <Form.Label>End Date</Form.Label>\r\n                <Form.Control type=\"date\" name=\"endDate\" placeholder=\"Scheme End Date\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCondType\">\r\n                <Form.Label>Select Condition Type</Form.Label>\r\n                <Form.Control required\r\n                as=\"select\"\r\n                name=\"condType\"\r\n                value={condType}\r\n                onChange={e => {\r\n                    console.log(\"e.target.value\", e.target.value);\r\n                    setCondType(e.target.value);\r\n                }}\r\n                >\r\n                <option value=\"No\">No Condition</option>\r\n                <option value=\"Price_Condition\">Price Condition</option>\r\n                <option value=\"Model_Condition\">Model Condition</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <RenderCondition condType={condType} />\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicOperator\">\r\n            <Form.Label>Offered Amount</Form.Label>\r\n                <Row>\r\n                    <Col md={2} xs={4}>\r\n                        <Form.Control\r\n                        as=\"select\" name=\"creditType\">\r\n                        <option value=\"%\">%</option>\r\n                        <option value=\"flat\">Flat</option>\r\n                        </Form.Control>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Control type=\"number\" step=\"0.01\" name=\"creditValue\" placeholder=\"Enter Value\" />\r\n                    </Col>\r\n                </Row>  \r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n\r\n        <Modal show={modelShow}>\r\n            <Modal.Header>\r\n              <Modal.Title>Please Select the Correct Attributes</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleUserHeaderSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"date_column\">\r\n                        <Form.Label>Date Column</Form.Label>\r\n                        <Form.Control as=\"select\" name=\"dateCol\">\r\n                        {fileHeaderOptions}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"model_column\">\r\n                        <Form.Label>Model Column</Form.Label>\r\n                        <Form.Control as=\"select\" name = \"modelCol\">\r\n                        {fileHeaderOptions}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"Price_column\">\r\n                        <Form.Label>Price Column</Form.Label>\r\n                        <Form.Control as=\"select\" name =\"priceCol\">\r\n                        {fileHeaderOptions}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" type=\"Submit\">\r\n                            Submit \r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal.Body>\r\n            \r\n          </Modal>\r\n        </div>\r\n        </div>\r\n    </div>)\r\n}\r\nexport default NewSchemeForm;","import Loader from 'react-loader-spinner';\r\nfunction Loading(){\r\n    return(\r\n    <div\r\n  style={{\r\n    width: \"100%\",\r\n    height: \"100\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }}\r\n>\r\n  <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\r\n</div>\r\n    )\r\n}\r\nexport default Loading;","import {\r\n    Card, Button, Col, Row, Toast\r\n  } from 'react-bootstrap';\r\nimport {useState,useEffect} from 'react';\r\nimport {FaChevronCircleDown,FaChevronCircleUp,FaEdit} from 'react-icons/fa';\r\nimport {MdDelete,MdAddCircle,MdCancel} from 'react-icons/md';\r\nimport Loading from './Loading';\r\nimport axios from \"axios\";\r\n\r\n  \r\nfunction datePretty(date1){\r\n    return Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(date1)));\r\n}\r\nfunction toggleView(id){\r\n    const schemeDoc = document.getElementById(id);\r\n    const schemeMore = schemeDoc.getElementsByClassName(\"more-details\")[0];\r\n    const schemeViewDown = schemeDoc.getElementsByClassName(\"down-icon\")[0];\r\n    const schemeViewUp = schemeDoc.getElementsByClassName(\"up-icon\")[0];\r\n\r\n    if(schemeMore.style.display===\"none\" || schemeMore.style.display===\"\" ){\r\n        schemeMore.style.display=\"block\";\r\n        schemeViewDown.style.display = \"none\";\r\n        schemeViewUp.style.display = \"block\";\r\n    }\r\n    else {\r\n        schemeMore.style.display=\"none\";\r\n        schemeViewDown.style.display = \"block\";\r\n        schemeViewUp.style.display = \"none\";\r\n    };\r\n    // console.log(document.getElementById(id).style.display);\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\nfunction ViewScheme(){\r\n    const [schemeData,updateSchemeData] = useState([]);\r\n    const [loading,setLoading] = useState(true);\r\n    const [deleteLoading,setDeleteLoading] = useState(false);\r\n    const [deleteshow, setDeleteShow] = useState(false);\r\n    var schemeDetails;\r\n    function DeleteToast() {\r\n        \r\n      \r\n        return (    \r\n        <div class=\"fixed-bottom\">\r\n          <Row>\r\n            <Col xs={12}>\r\n              <Toast onClose={() => setDeleteShow(false)} show={deleteshow} delay={2000} autohide>\r\n                <Toast.Body>Scheme Deleted Succefully</Toast.Body>\r\n              </Toast>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        );\r\n    }\r\n    async function fetchSchemeData(){\r\n        try{\r\n            \r\n            const schemeData = await axios.get(`/scheme/`).then(setLoading(false));\r\n            const dataFromAPI = schemeData.data.results;\r\n            updateSchemeData(dataFromAPI);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            alert(\"Cannot Fetch your schemes. ERROR : \" + e.message);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n          fetchSchemeData();\r\n      }, []);\r\n    async function deleteScheme(id){\r\n        setDeleteLoading(true);\r\n\r\n        // await sleep(2000);        \r\n        try{\r\n            const delete_scheme = await axios.delete(`/scheme/${id}`).then(setDeleteLoading(false)).then(setDeleteShow(true));\r\n            updateSchemeData(schemeData.filter(item => item._id !== id));\r\n            \r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            alert(e.message);\r\n        }\r\n    }\r\n\r\n      if(schemeData){\r\n        schemeDetails = schemeData.map((scheme)=> {\r\n            var x = parseInt(scheme.creditNote);\r\n            x=x.toString();\r\n            var lastThree = x.substring(x.length-3);\r\n            var otherNumbers = x.substring(0,x.length-3);\r\n            var editLink = \"/updatescheme/\"+ scheme._id\r\n            if(otherNumbers != '')\r\n                lastThree = ',' + lastThree;\r\n            var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\r\n            return (\r\n                    <Card style={{ width: '100%' }} id={scheme._id} className=\"mt-4\" key={scheme._id}>\r\n                        {/* <Card.Img variant=\"top\" src=\"assets/images/special_offer.jpg\" /> */}\r\n                        <Card.Body>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <Card.Title>{scheme.name}</Card.Title>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <Card.Text>{datePretty(scheme.start_date)} to {datePretty(scheme.end_date)}</Card.Text>\r\n                                </div>\r\n                            </div>\r\n                            {/* </Col> */}\r\n                            <Button className=\"green-background\">Credit Note : ₹ {res}</Button>\r\n                                <Button className = \"view-more\" onClick={() => toggleView(scheme._id)}><FaChevronCircleDown size={30} className=\"down-icon\"/><FaChevronCircleUp size={30} className=\"up-icon\"/></Button>\r\n                                <Button className=\"button-edit\" onClick={(e) => {e.preventDefault();window.location.href=editLink;}}><FaEdit size={30} /></Button>\r\n                            <Button className=\"button-delete\" onClick={(e) => {if (window.confirm('Are you sure you wish to delete this scheme?')) deleteScheme(scheme._id)}}><MdCancel size={30}/></Button>\r\n                            <div className = \"more-details\">\r\n                                <span>{scheme.creditValue.creditValue}</span><span>{scheme.creditValue.creditType}</span>\r\n                            </div>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n            )\r\n        });\r\n        }\r\n    return (\r\n        <div className = \"container\">\r\n            {loading || deleteLoading ? <Loading /> : \r\n            <div className=\"row\">\r\n                <div className=\"col-md-4 offset-md-4 p-0\">\r\n                  \r\n                    {/* <a href=\"/newscheme\">Add Scheme</a> */}\r\n                    {schemeDetails}\r\n                </div>\r\n                {deleteshow ? <DeleteToast /> : \"\"}\r\n            </div>\r\n            }\r\n        </div>\r\n      );\r\n}\r\nexport default ViewScheme;","import {Form,Button,Row,Col,Modal} from 'react-bootstrap';\r\nimport {useState,useEffect} from 'react';\r\nimport { model } from '../shared/model_data';\r\nimport { SheetJSFT } from '../shared/file_types';\r\nimport { make_cols } from './MakeColumns';\r\nimport axios from \"axios\";\r\nimport XLSX from 'xlsx';\r\nimport {useHistory} from \"react-router-dom\";\r\n// var Multiselect = require('react-bootstrap-multiselect');\r\n\r\n\r\nfunction RenderPriceCondition(props){\r\n    return (\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicOperator\">\r\n            <Form.Label>Select the Condition</Form.Label>\r\n            <Row>\r\n                <Col md={2} xs={4}>\r\n                    <Form.Control\r\n                    defaultValue = {props.condition.operator}\r\n                    as=\"select\" name=\"priceOperator\">\r\n                    <option value=\">=\">{\">=\"}</option>\r\n                    <option value=\"=\">=</option>\r\n                    <option value=\"<=\">{\"<=\"}</option>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Control defaultValue={props.condition.price} type=\"number\" name=\"condValue\" placeholder=\"Enter Condition Value\" />\r\n                </Col>\r\n            </Row>  \r\n        </Form.Group>\r\n    )\r\n}\r\nfunction RenderModelCondition(){\r\n   \r\n    //mobile model condition allow\r\n    return(\r\n        <div></div>\r\n    )\r\n}\r\nfunction RenderCondition(props){\r\n    if(props.condType===\"No\"){\r\n        return (<div></div>)\r\n    }\r\n    else if(props.condType===\"Price_Condition\"){\r\n        return <RenderPriceCondition condition={props.condition} />\r\n    }\r\n    else if(props.condType===\"Model_Condition\"){\r\n        return <RenderModelCondition />\r\n    }\r\n    else {return(<div></div>);}\r\n}\r\nfunction UpdateScheme(props){\r\n    const id = props.match.params.id;\r\n    const [condType,setCondType] = useState();\r\n    const [scheme,setScheme] = useState();\r\n    const [Condition,setCondition] = useState([]);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        fetchSchemeData(id);\r\n      }, []);\r\n    async function fetchSchemeData(id){\r\n        console.log(id);\r\n        try{\r\n                \r\n            const schemeGetCall = await axios.get(`/scheme/${id}`);\r\n            const dataFromAPI = schemeGetCall.data.results;\r\n            setScheme(dataFromAPI);\r\n            setCondType(dataFromAPI.condition_type);\r\n            if(dataFromAPI.condition_type === \"Price_Condition\"){\r\n                setCondition(dataFromAPI.price_condition);\r\n            }\r\n            // setFileHeader(dataFromAPI.data_header);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            alert(e.message);\r\n        }\r\n    }\r\n    async function handleUpdateScheme(event) {\r\n        var priceOperator;\r\n        var condValue; \r\n        event.preventDefault();\r\n        if(condType === \"No\"){\r\n            priceOperator = null;\r\n            condValue = null;\r\n        }\r\n        else if(condType === \"Price_Condition\"){\r\n            priceOperator = event.target.priceOperator.value;\r\n            condValue = event.target.condValue.value;\r\n        }\r\n            try{\r\n                \r\n            const createTask = await axios.put(`/scheme/${id}`, {\r\n                    name: event.target.schemeName.value,\r\n                    start_date: event.target.startDate.value,\r\n                    end_date: event.target.endDate.value,\r\n                    condition_type: event.target.condType.value,\r\n                    price_condition: {\r\n                        operator: priceOperator,\r\n                        price : condValue\r\n                    },\r\n                    creditValue:{\r\n                        creditType: event.target.creditType.value,\r\n                        creditValue: event.target.creditValue.value\r\n                    }\r\n            });\r\n                alert('Scheme ' + event.target.schemeName.value + ' updated succesfully');\r\n                history.push(\"/\");\r\n            }\r\n            catch(e){\r\n            console.log(e);\r\n            alert(e.message);\r\n            }\r\n       //  alert(\"States added successfully\");\r\n       //  fetchStateData();\r\n   }\r\n    if(scheme){\r\n    return(\r\n    <div className = \"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4 offset-md-4\">\r\n\r\n            {/* <h3>Now Understanding Credit Note is Easier, Just upload your activation sheet and scheme Details, credit Note (CN) will be calculated for you in less than a minute</h3> */}\r\n\r\n\r\n            \r\n        <Form onSubmit={handleUpdateScheme}>\r\n            {/* Scheme Name */}\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                <Form.Label>Scheme Name</Form.Label>\r\n                <Form.Control required type=\"name\" name=\"schemeName\" placeholder=\"Enter Scheme Name\" defaultValue={scheme.name} />\r\n                <Form.Text className=\"text-muted\">\r\n                Create a new name for scheme to help you track later on\r\n                </Form.Text>\r\n            </Form.Group>\r\n            {/* Start & End Date */}\r\n            <Form.Group className=\"mb-3\" controlId=\"start_date\">\r\n                <Form.Label>Start Date</Form.Label>\r\n                <Form.Control required type=\"date\" name=\"startDate\" placeholder=\"Scheme Start Date\" defaultValue={scheme.start_date.split(\"T\")[0]} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"end_date\">\r\n                <Form.Label>End Date</Form.Label>\r\n                <Form.Control type=\"date\" name=\"endDate\" placeholder=\"Scheme End Date\" defaultValue={scheme.end_date.split(\"T\")[0]}/>\r\n            </Form.Group>\r\n\r\n            {/* Condition Type & Render Condition */}\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCondType\">\r\n                <Form.Label>Select Condition Type {scheme.condition_type}</Form.Label>\r\n                <Form.Control required\r\n                defaultValue={scheme.condition_type}\r\n                as=\"select\"\r\n                name=\"condType\"\r\n                onChange={e => {\r\n                    console.log(\"e.target.value\", e.target.value);\r\n                    setCondType(e.target.value);\r\n                }}\r\n                >\r\n                <option value=\"No\">No Condition</option>\r\n                <option value=\"Price_Condition\">Price Condition</option>\r\n                <option value=\"Model_Condition\">Model Condition</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <RenderCondition condType={condType} condition={Condition} />\r\n            {/* Offer Type & Amount */}\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicOperator\">\r\n                <Form.Label>Offered Amount</Form.Label>\r\n                <Row>\r\n                    <Col md={2} xs={4}>\r\n                        <Form.Control\r\n                        defaultValue = {scheme.creditValue.creditType}\r\n                        as=\"select\" name=\"creditType\">\r\n                        <option value=\"%\">%</option>\r\n                        <option value=\"flat\">Flat</option>\r\n                        </Form.Control>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Control type=\"number\" step=\"0.01\" name=\"creditValue\" placeholder=\"Enter Value\" defaultValue = {scheme.creditValue.creditValue}/>\r\n                    </Col>\r\n                </Row>  \r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n        </div>\r\n        </div>\r\n    </div>)\r\n    }\r\n    else{\r\n        return (<div>Loading Scheme...</div>);\r\n    }\r\n}\r\nexport default UpdateScheme;","import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Header from './Components/Header';\nimport NewSchemeForm from './Components/NewSchemeForm';\nimport ViewScheme from './Components/ViewScheme';\nimport UpdateScheme from './Components/UpdateScheme';\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Header />\n    <Router>\n    \n\n      <Switch>\n        \n        <Route path=\"/newscheme\">\n          <NewSchemeForm />\n        </Route>\n        <Route path=\"/scheme\">\n        <ViewScheme />\n        </Route>\n        <Route path=\"/updatescheme/:id\" component={UpdateScheme}>\n        </Route>\n        \n        <Route path=\"/\">\n        <ViewScheme />\n        </Route>\n\n      </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./bootstrap-multiselect.css\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}