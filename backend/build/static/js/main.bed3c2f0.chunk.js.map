{"version":3,"sources":["logo.svg","shared/file_types.js","Components/NewSchemeForm.js","Components/ViewScheme.js","Components/UpdateScheme.js","App.js","reportWebVitals.js","index.js"],"names":["SheetJSFT","map","x","join","RenderPriceCondition","Form","Group","className","controlId","Label","Row","Col","md","xs","Control","as","name","value","type","placeholder","RenderModelCondition","RenderCondition","props","condType","NewSchemeForm","fileHeaderOptions","useState","setCondType","file","setFile","schemeImage","setSchemeImage","fileHeader","setFileHeader","date","model","price","userHeader","setUserHeader","excelJSON","setExcelJSON","modelShow","setModelShow","userHeaderSubmit","setUserHeaderSubmit","history","useHistory","event","a","imgData","FormData","append","axios","post","e","console","log","alert","message","preventDefault","priceOperator","condValue","target","schemeName","start_date","startDate","end_date","endDate","condition_type","price_condition","operator","data_header","excel_data","creditValue","creditType","excel_file","size","fileName","push","useEffect","head","onSubmit","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","XLSX","read","bookVBA","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","Object","keys","readAsArrayBuffer","accept","onChange","files","Button","variant","required","Text","step","Modal","show","Header","Title","Body","curr_state","dateCol","priceCol","modelCol","Footer","datePretty","date1","Intl","DateTimeFormat","year","month","day","format","Date","parse","id","delete","ViewScheme","schemeDetails","schemeData","updateSchemeData","get","dataFromAPI","results","fetchSchemeData","scheme","parseInt","creditNote","lastThree","toString","substring","length","otherNumbers","editLink","_id","res","replace","Card","style","width","Img","src","onClick","schemeDoc","document","getElementById","schemeMore","getElementsByClassName","schemeViewMore","display","innerHTML","toggleView","href","danger","deleteScheme","defaultValue","condition","UpdateScheme","match","params","setScheme","Condition","setCondition","schemeGetCall","put","split","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bed3c2f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const SheetJSFT = [\r\n\t\"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"\r\n].map(function(x) { return \".\" + x; }).join(\",\");","import {Form,Button,Row,Col,Modal} from 'react-bootstrap';\r\nimport {useState,useEffect} from 'react';\r\nimport { model } from '../shared/model_data';\r\nimport { SheetJSFT } from '../shared/file_types';\r\nimport { make_cols } from './MakeColumns';\r\nimport axios from \"axios\";\r\nimport XLSX from 'xlsx';\r\nimport {useHistory} from \"react-router-dom\";\r\n// var Multiselect = require('react-bootstrap-multiselect');\r\n\r\n\r\nfunction RenderPriceCondition(){\r\n    return (\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicOperator\">\r\n            <Form.Label>Select the Condition</Form.Label>\r\n            <Row>\r\n                <Col md={2} xs={4}>\r\n                    <Form.Control\r\n                    as=\"select\" name=\"priceOperator\">\r\n                    <option value=\">=\">{\">=\"}</option>\r\n                    <option value=\"=\">=</option>\r\n                    <option value=\"<=\">{\"<=\"}</option>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Control type=\"number\" name=\"condValue\" placeholder=\"Enter Condition Value\" />\r\n                </Col>\r\n            </Row>  \r\n        </Form.Group>\r\n    )\r\n}\r\nfunction RenderModelCondition(){\r\n   \r\n    //mobile model condition allow\r\n    return(\r\n        <div></div>\r\n    )\r\n}\r\nfunction RenderCondition(props){\r\n    if(props.condType===\"No\"){\r\n        return (<div></div>)\r\n    }\r\n    else if(props.condType===\"Price_Condition\"){\r\n        return <RenderPriceCondition />\r\n    }\r\n    else if(props.condType===\"Model_Condition\"){\r\n        return <RenderModelCondition />\r\n    }\r\n    else {return(<div></div>);}\r\n}\r\nfunction NewSchemeForm(){\r\n    \r\n    const [condType,setCondType] = useState();\r\n    const [file,setFile] = useState();\r\n    const [schemeImage,setSchemeImage] = useState();\r\n    const [fileHeader,setFileHeader] = useState();\r\n    const [userHeader,setUserHeader] = useState({\r\n        date: '',\r\n        model: '',\r\n        price: ''\r\n    });\r\n    const [excelJSON,setExcelJSON] = useState();\r\n    const [modelShow,setModelShow] = useState();\r\n    const [userHeaderSubmit,setUserHeaderSubmit] = useState();\r\n    const history = useHistory();\r\n    var fileHeaderOptions;\r\n    useEffect(() => {\r\n        setCondType(\"No\");\r\n        setFileHeader(null);\r\n        setModelShow(false);\r\n      }, []);\r\n    if(fileHeader) fileHeaderOptions = fileHeader.map((head)=>{return (<option key = {head} value={head}>{head}</option>)});\r\n\r\n    function   handleActivationFileChange(e) {\r\n        const files = e.target.files;\r\n        if (files && files[0]) {\r\n            console.log(files[0]);\r\n            setFile(files[0]);\r\n        }\r\n    };\r\n    function   handleActivationUpload(e) {\r\n        e.preventDefault();\r\n        /* Boilerplate to set up FileReader */\r\n        const reader = new FileReader();\r\n        const rABS = !!reader.readAsBinaryString;\r\n        // console.log(file);\r\n        try{\r\n            reader.onload = (e) => {\r\n            /* Parse data */\r\n            const bstr = e.target.result;\r\n            const wb = XLSX.read(bstr, {\r\n                type: rABS ? 'binary' : 'array',\r\n                bookVBA: true,\r\n            });\r\n            /* Get first worksheet */\r\n            const wsname = wb.SheetNames[0];\r\n            const ws = wb.Sheets[wsname];\r\n            /* Convert array of arrays */\r\n            const data = XLSX.utils.sheet_to_json(ws);\r\n            /* Update state */\r\n            //   console.log(JSON.stringify(data, null, 2));\r\n            // const dataJSON = JSON.stringify(data, null, 2);\r\n            setExcelJSON(data);\r\n            setFileHeader(Object.keys(data[0]));\r\n            setModelShow(true);\r\n            //   this.setState({ data: data, cols: make_cols(ws['!ref']) }, () => {\r\n                \r\n            //   });\r\n            };\r\n            if (rABS) {\r\n            console.log('rABS');\r\n            reader.readAsBinaryString(file);\r\n            } else {\r\n            reader.readAsArrayBuffer(file);\r\n            }\r\n        }\r\n        catch{\r\n            alert(\"Please select Valid file\");\r\n        }\r\n      }\r\n    function handleUserHeaderSubmit(e){\r\n        e.preventDefault();\r\n        const curr_state = {\r\n            date: e.target.dateCol.value,\r\n            price: e.target.priceCol.value,\r\n            model: e.target.modelCol.value,\r\n        }\r\n        setUserHeader(curr_state);\r\n        setUserHeaderSubmit(true);\r\n        setModelShow(false);\r\n        return(<div></div>);\r\n    }\r\n    function handleImageFileChange(e){\r\n        const files = e.target.files;\r\n        if (files && files[0]) {\r\n            console.log(files[0]);\r\n            setSchemeImage(files[0]);\r\n        }\r\n         \r\n    }\r\n    async function handleAddScheme(event) {\r\n\r\n        const imgData = new FormData();\r\n        imgData.append('file', schemeImage);\r\n        try{\r\n            axios.post('http://localhost:3000/upload/', imgData);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            alert(e.message);\r\n        }\r\n\r\n\r\n        var priceOperator;\r\n        var condValue; \r\n        event.preventDefault();\r\n        if(condType === \"No\"){\r\n            priceOperator = null;\r\n            condValue = null\r\n        }\r\n        else if(condType === \"Price_Condition\"){\r\n            priceOperator = event.target.priceOperator.value;\r\n            condValue = event.target.condValue.value\r\n        }\r\n        if(userHeaderSubmit){\r\n            try{\r\n                \r\n            const createTask = await axios.post(`http://localhost:3000/scheme/`, {\r\n                    name: event.target.schemeName.value,\r\n                    start_date: event.target.startDate.value,\r\n                    end_date: event.target.endDate.value,\r\n                    condition_type: event.target.condType.value,\r\n                    price_condition: {\r\n                        operator: priceOperator,\r\n                        price : condValue\r\n                    },\r\n                    data_header:{\r\n                        date: userHeader.date,\r\n                        price: userHeader.price,\r\n                        model: userHeader.model\r\n                    },\r\n                    excel_data:excelJSON,\r\n                    creditValue:{\r\n                        creditType: event.target.creditType.value,\r\n                        creditValue: event.target.creditValue.value\r\n                    },\r\n                    excel_file:{\r\n                        name:file.name,\r\n                        size:file.size\r\n                    },\r\n                    fileName:file\r\n            });\r\n            alert('Scheme ' + event.target.schemeName.value + ' added succesfully');\r\n            history.push(\"/\");\r\n            }\r\n            catch(e){\r\n            console.log(e);\r\n            alert(e.message);\r\n            }\r\n        }\r\n        else{\r\n            alert(\"Please upload the Activation Sheet & select the correct columns\");\r\n        }\r\n       //  alert(\"States added successfully\");\r\n       //  fetchStateData();\r\n   }\r\n    return(\r\n    <div className = \"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4 offset-md-4\">\r\n\r\n            {/* <h3>Now Understanding Credit Note is Easier, Just upload your activation sheet and scheme Details, credit Note (CN) will be calculated for you in less than a minute</h3> */}\r\n\r\n\r\n            <p>Please select the Activation file first, then add the scheme details below</p>\r\n            <Form onSubmit = {handleActivationUpload}> \r\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                    <Form.Label>Upload Activation Sheet</Form.Label>\r\n                    <Form.Control type=\"file\" accept={SheetJSFT} onChange={handleActivationFileChange}/>\r\n                    <Button variant=\"primary\" type=\"submit\">Upload</Button>\r\n            </Form.Group>\r\n            </Form>\r\n        <Form onSubmit={handleAddScheme}>\r\n            <Form.Group controlId=\"formFile\" className=\"mb-3\" >\r\n                    <Form.Label>Upload Scheme Image (Optional)</Form.Label>\r\n                    <Form.Control type=\"file\" name=\"file\" onChange={handleImageFileChange}/>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                <Form.Label>Scheme Name</Form.Label>\r\n                <Form.Control required type=\"name\" name=\"schemeName\" placeholder=\"Enter Scheme Name\" />\r\n                <Form.Text className=\"text-muted\">\r\n                Create a new name for scheme to help you track later on\r\n                </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"start_date\">\r\n                <Form.Label>Start Date</Form.Label>\r\n                <Form.Control required type=\"date\" name=\"startDate\" placeholder=\"Scheme Start Date\" />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"end_date\">\r\n                <Form.Label>End Date</Form.Label>\r\n                <Form.Control type=\"date\" name=\"endDate\" placeholder=\"Scheme End Date\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCondType\">\r\n                <Form.Label>Select Condition Type</Form.Label>\r\n                <Form.Control required\r\n                as=\"select\"\r\n                name=\"condType\"\r\n                value={condType}\r\n                onChange={e => {\r\n                    console.log(\"e.target.value\", e.target.value);\r\n                    setCondType(e.target.value);\r\n                }}\r\n                >\r\n                <option value=\"No\">No Condition</option>\r\n                <option value=\"Price_Condition\">Price Condition</option>\r\n                <option value=\"Model_Condition\">Model Condition</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <RenderCondition condType={condType} />\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicOperator\">\r\n            <Form.Label>Offered Amount</Form.Label>\r\n                <Row>\r\n                    <Col md={2} xs={4}>\r\n                        <Form.Control\r\n                        as=\"select\" name=\"creditType\">\r\n                        <option value=\"%\">%</option>\r\n                        <option value=\"flat\">Flat</option>\r\n                        </Form.Control>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Control type=\"number\" step=\"0.01\" name=\"creditValue\" placeholder=\"Enter Value\" />\r\n                    </Col>\r\n                </Row>  \r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n\r\n        <Modal show={modelShow}>\r\n            <Modal.Header>\r\n              <Modal.Title>Please Select the Correct Attributes</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form onSubmit={handleUserHeaderSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"date_column\">\r\n                        <Form.Label>Date Column</Form.Label>\r\n                        <Form.Control as=\"select\" name=\"dateCol\">\r\n                        {fileHeaderOptions}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"model_column\">\r\n                        <Form.Label>Model Column</Form.Label>\r\n                        <Form.Control as=\"select\" name = \"modelCol\">\r\n                        {fileHeaderOptions}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"Price_column\">\r\n                        <Form.Label>Price Column</Form.Label>\r\n                        <Form.Control as=\"select\" name =\"priceCol\">\r\n                        {fileHeaderOptions}\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"primary\" type=\"Submit\">\r\n                            Submit \r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal.Body>\r\n            \r\n          </Modal>\r\n        </div>\r\n        </div>\r\n    </div>)\r\n}\r\nexport default NewSchemeForm;","import {\r\n    Card, Button, Col\r\n  } from 'react-bootstrap';\r\nimport {useState,useEffect} from 'react';\r\nimport axios from \"axios\";\r\nfunction datePretty(date1){\r\n    return Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(date1)));\r\n}\r\nfunction toggleView(id){\r\n    const schemeDoc = document.getElementById(id);\r\n    const schemeMore = schemeDoc.getElementsByClassName(\"more-details\")[0];\r\n    const schemeViewMore = schemeDoc.getElementsByClassName(\"view-more\")[0];\r\n    if(schemeMore.style.display===\"none\" || schemeMore.style.display===\"\" ){\r\n        schemeMore.style.display=\"block\";\r\n        schemeViewMore.innerHTML = \"Show less\";\r\n    }\r\n    else {\r\n        schemeMore.style.display=\"none\";\r\n        schemeViewMore.innerHTML = \"Show More\";\r\n    };\r\n    // console.log(document.getElementById(id).style.display);\r\n}\r\nasync function deleteScheme(id){\r\n    try{\r\n        const delete_scheme = await axios.delete(`http://localhost:3000/scheme/${id}`);\r\n        alert(\"Deleted scheme Succesfully\");\r\n        \r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n        alert(e.message);\r\n    }\r\n}\r\nfunction ViewScheme(){\r\n    const [schemeData,updateSchemeData] = useState([]);\r\n    var schemeDetails;\r\n    async function fetchSchemeData(){\r\n        try{\r\n            \r\n            const schemeData = await axios.get(`http://localhost:3000/scheme/`);\r\n            const dataFromAPI = schemeData.data.results;\r\n            updateSchemeData(dataFromAPI);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            alert(e.message);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchSchemeData();\r\n      }, []);\r\n\r\n      if(schemeData){\r\n        schemeDetails = schemeData.map((scheme)=> {\r\n            var x = parseInt(scheme.creditNote);\r\n            x=x.toString();\r\n            var lastThree = x.substring(x.length-3);\r\n            var otherNumbers = x.substring(0,x.length-3);\r\n            var editLink = \"/updatescheme/\"+ scheme._id\r\n            if(otherNumbers != '')\r\n                lastThree = ',' + lastThree;\r\n            var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\r\n            return (\r\n                    <Card style={{ width: '100%' }} id={scheme._id}>\r\n                        <Card.Img variant=\"top\" src=\"assets/images/special_offer.jpg\" />\r\n                        <Card.Body>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-6\">\r\n                                    <Card.Title>{scheme.name}</Card.Title>\r\n                                </div>\r\n                                <div className=\"col-md-6\">\r\n                                    <Card.Text>{datePretty(scheme.start_date)} to {datePretty(scheme.end_date)}</Card.Text>\r\n                                </div>\r\n                            </div>\r\n                            {/* </Col> */}\r\n                            <Button className=\"green-background\">Credit Note : ₹ {res}</Button>\r\n                            <Button className = \"view-more\" onClick={() => toggleView(scheme._id)}>Show More</Button>\r\n                            <Button className=\"green-background\"><a href={editLink}>Edit Scheme</a></Button>\r\n                            <Button danger onClick={() => deleteScheme(scheme._id)}>Delete Scheme</Button>\r\n\r\n                            <div className = \"more-details\">\r\n                                <span>{scheme.creditValue.creditValue}</span><span>{scheme.creditValue.creditType}</span>\r\n                            </div>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n            )\r\n        });\r\n        }\r\n    return (\r\n        <div className = \"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4 offset-md-4 p-0\">\r\n                    <a href=\"/newscheme\">Add Scheme</a>\r\n                    {schemeDetails}\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n}\r\nexport default ViewScheme;","import {Form,Button,Row,Col,Modal} from 'react-bootstrap';\r\nimport {useState,useEffect} from 'react';\r\nimport { model } from '../shared/model_data';\r\nimport { SheetJSFT } from '../shared/file_types';\r\nimport { make_cols } from './MakeColumns';\r\nimport axios from \"axios\";\r\nimport XLSX from 'xlsx';\r\nimport {useHistory} from \"react-router-dom\";\r\n// var Multiselect = require('react-bootstrap-multiselect');\r\n\r\n\r\nfunction RenderPriceCondition(props){\r\n    return (\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicOperator\">\r\n            <Form.Label>Select the Condition</Form.Label>\r\n            <Row>\r\n                <Col md={2} xs={4}>\r\n                    <Form.Control\r\n                    defaultValue = {props.condition.operator}\r\n                    as=\"select\" name=\"priceOperator\">\r\n                    <option value=\">=\">{\">=\"}</option>\r\n                    <option value=\"=\">=</option>\r\n                    <option value=\"<=\">{\"<=\"}</option>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col>\r\n                    <Form.Control defaultValue={props.condition.price} type=\"number\" name=\"condValue\" placeholder=\"Enter Condition Value\" />\r\n                </Col>\r\n            </Row>  \r\n        </Form.Group>\r\n    )\r\n}\r\nfunction RenderModelCondition(){\r\n   \r\n    //mobile model condition allow\r\n    return(\r\n        <div></div>\r\n    )\r\n}\r\nfunction RenderCondition(props){\r\n    if(props.condType===\"No\"){\r\n        return (<div></div>)\r\n    }\r\n    else if(props.condType===\"Price_Condition\"){\r\n        return <RenderPriceCondition condition={props.condition} />\r\n    }\r\n    else if(props.condType===\"Model_Condition\"){\r\n        return <RenderModelCondition />\r\n    }\r\n    else {return(<div></div>);}\r\n}\r\nfunction UpdateScheme(props){\r\n    const id = props.match.params.id;\r\n    const [condType,setCondType] = useState();\r\n    const [scheme,setScheme] = useState();\r\n    const [Condition,setCondition] = useState([]);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        fetchSchemeData(id);\r\n      }, []);\r\n    async function fetchSchemeData(id){\r\n        console.log(id);\r\n        try{\r\n                \r\n            const schemeGetCall = await axios.get(`http://localhost:3000/scheme/${id}`);\r\n            const dataFromAPI = schemeGetCall.data.results;\r\n            setScheme(dataFromAPI);\r\n            setCondType(dataFromAPI.condition_type);\r\n            if(dataFromAPI.condition_type === \"Price_Condition\"){\r\n                setCondition(dataFromAPI.price_condition);\r\n            }\r\n            // setFileHeader(dataFromAPI.data_header);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n            alert(e.message);\r\n        }\r\n    }\r\n    async function handleUpdateScheme(event) {\r\n        var priceOperator;\r\n        var condValue; \r\n        event.preventDefault();\r\n        if(condType === \"No\"){\r\n            priceOperator = null;\r\n            condValue = null;\r\n        }\r\n        else if(condType === \"Price_Condition\"){\r\n            priceOperator = event.target.priceOperator.value;\r\n            condValue = event.target.condValue.value;\r\n        }\r\n            try{\r\n                \r\n            const createTask = await axios.put(`http://localhost:3000/scheme/${id}`, {\r\n                    name: event.target.schemeName.value,\r\n                    start_date: event.target.startDate.value,\r\n                    end_date: event.target.endDate.value,\r\n                    condition_type: event.target.condType.value,\r\n                    price_condition: {\r\n                        operator: priceOperator,\r\n                        price : condValue\r\n                    },\r\n                    creditValue:{\r\n                        creditType: event.target.creditType.value,\r\n                        creditValue: event.target.creditValue.value\r\n                    }\r\n            });\r\n                alert('Scheme ' + event.target.schemeName.value + ' updated succesfully');\r\n                history.push(\"/\");\r\n            }\r\n            catch(e){\r\n            console.log(e);\r\n            alert(e.message);\r\n            }\r\n       //  alert(\"States added successfully\");\r\n       //  fetchStateData();\r\n   }\r\n    if(scheme){\r\n    return(\r\n    <div className = \"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-4 offset-md-4\">\r\n\r\n            {/* <h3>Now Understanding Credit Note is Easier, Just upload your activation sheet and scheme Details, credit Note (CN) will be calculated for you in less than a minute</h3> */}\r\n\r\n\r\n            \r\n        <Form onSubmit={handleUpdateScheme}>\r\n            {/* Scheme Name */}\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n                <Form.Label>Scheme Name</Form.Label>\r\n                <Form.Control required type=\"name\" name=\"schemeName\" placeholder=\"Enter Scheme Name\" defaultValue={scheme.name} />\r\n                <Form.Text className=\"text-muted\">\r\n                Create a new name for scheme to help you track later on\r\n                </Form.Text>\r\n            </Form.Group>\r\n            {/* Start & End Date */}\r\n            <Form.Group className=\"mb-3\" controlId=\"start_date\">\r\n                <Form.Label>Start Date</Form.Label>\r\n                <Form.Control required type=\"date\" name=\"startDate\" placeholder=\"Scheme Start Date\" defaultValue={scheme.start_date.split(\"T\")[0]} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"end_date\">\r\n                <Form.Label>End Date</Form.Label>\r\n                <Form.Control type=\"date\" name=\"endDate\" placeholder=\"Scheme End Date\" defaultValue={scheme.end_date.split(\"T\")[0]}/>\r\n            </Form.Group>\r\n\r\n            {/* Condition Type & Render Condition */}\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCondType\">\r\n                <Form.Label>Select Condition Type {scheme.condition_type}</Form.Label>\r\n                <Form.Control required\r\n                defaultValue={scheme.condition_type}\r\n                as=\"select\"\r\n                name=\"condType\"\r\n                onChange={e => {\r\n                    console.log(\"e.target.value\", e.target.value);\r\n                    setCondType(e.target.value);\r\n                }}\r\n                >\r\n                <option value=\"No\">No Condition</option>\r\n                <option value=\"Price_Condition\">Price Condition</option>\r\n                <option value=\"Model_Condition\">Model Condition</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <RenderCondition condType={condType} condition={Condition} />\r\n            {/* Offer Type & Amount */}\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicOperator\">\r\n                <Form.Label>Offered Amount</Form.Label>\r\n                <Row>\r\n                    <Col md={2} xs={4}>\r\n                        <Form.Control\r\n                        defaultValue = {scheme.creditValue.creditType}\r\n                        as=\"select\" name=\"creditType\">\r\n                        <option value=\"%\">%</option>\r\n                        <option value=\"flat\">Flat</option>\r\n                        </Form.Control>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Control type=\"number\" step=\"0.01\" name=\"creditValue\" placeholder=\"Enter Value\" defaultValue = {scheme.creditValue.creditValue}/>\r\n                    </Col>\r\n                </Row>  \r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n        </div>\r\n        </div>\r\n    </div>)\r\n    }\r\n    else{\r\n        return (<div>Loading Scheme...</div>);\r\n    }\r\n}\r\nexport default UpdateScheme;","import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport NewSchemeForm from './Components/NewSchemeForm';\nimport ViewScheme from './Components/ViewScheme';\nimport UpdateScheme from './Components/UpdateScheme';\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n    \n\n      <Switch>\n              \n        <Route path=\"/newscheme\">\n          <NewSchemeForm />\n        </Route>\n        <Route path=\"/scheme\">\n        <ViewScheme />\n        </Route>\n        <Route path=\"/updatescheme/:id\" component={UpdateScheme}>\n        </Route>\n        \n        <Route path=\"/\">\n        <ViewScheme />\n        </Route>\n\n      </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./bootstrap-multiselect.css\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}